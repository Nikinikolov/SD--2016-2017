	                Свързан списък

1.Да се напише функция, която приема като аргумент свързан списък и проверява
дали всеки негов елемент се среща само по веднъж.

2.Да се напише функция, която, по дадени два свързани списъка,
връща трети свързан списък, представляващ:
	a)обединението на елементите на двата списъка;
	б)сечението на елементите на двата списъка;
	в)разликата на елементите на двата списъка.
Забележка: Разглеждаме множествата от елементите на списъците -
ако даден елемент се съдържа повече от веднъж в даден списък, то той се разглежда само веднъж.

3.Имаме едносвързан списък, елементите на който са от следния тип:

template <typename T>
struct Node
{
    T value;
    Node* next;
}

Да се напише функия, която приема като аргумент указател към първия елемент от такъв списък,
обръща реда на елементите на списъка и връща като резултат указател към новия първи елемент на списъка.

4. Да се реализира функция

void transformList(std::list<int> & l, int (*function) (int), bool (*predicate) (int)) ,

която премахва от l всички елементи, за които не е изпълнен predicate,
а стойността на всеки от останалите заменя с резултата от извикването на function с аргумент съотвегния елемент.
